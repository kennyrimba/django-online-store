name: Django Store CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  K8S_DEPLOYMENT_NAME: django-online-store

jobs:
  test:
    runs-on: [self-hosted, windows-latest]
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: ddice_db
          MYSQL_USER: django
          MYSQL_PASSWORD: django_password
          MYSQL_ROOT_PASSWORD: root_password
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install Dependencies
      shell: pwsh
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

  build-and-push:
    needs: test
    runs-on: [self-hosted, windows-latest]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v3
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKER_HUB_USERNAME }}/django-online-store:latest
          ${{ secrets.DOCKER_HUB_USERNAME }}/django-online-store:${{ github.sha }}
        cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/django-online-store:buildcache
        cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/django-online-store:buildcache,mode=max
        platforms: linux/amd64
        provenance: false

  deploy:
    needs: build-and-push
    runs-on: [self-hosted, windows-latest]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v3

    - name: Install kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'v1.25.0'

    - name: Configure kubectl
      shell: pwsh
      run: |
        echo "${{ secrets.KUBE_CONFIG }}" > kubeconfig.yaml
        $env:KUBECONFIG = "$(Get-Location)\kubeconfig.yaml"
        kubectl cluster-info

    - name: Update Kubernetes Deployment
      shell: pwsh
      run: |
        $env:KUBECONFIG = "$(Get-Location)\kubeconfig.yaml"
        kubectl set image deployment/${{ env.K8S_DEPLOYMENT_NAME }} `
          django-web=${{ secrets.DOCKER_HUB_USERNAME }}/django-online-store:${{ github.sha }} `
          --record

    - name: Verify Deployment
      shell: pwsh
      run: |
        kubectl rollout status deployment/${{ env.K8S_DEPLOYMENT_NAME }} --timeout=300s

    - name: Clean up
      if: always()
      shell: pwsh
      run: |
        if (Test-Path kubeconfig.yaml) {
          Remove-Item kubeconfig.yaml -Force
        }